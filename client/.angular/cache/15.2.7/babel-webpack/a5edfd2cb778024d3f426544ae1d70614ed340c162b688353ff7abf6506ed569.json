{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LikesService {\n  constructor() {\n    this.storageKey = \"likes\";\n  }\n  addLike(postId) {\n    const likes = this.getLikesFromStorage();\n    likes[postId] = likes[postId] ? likes[postId] + 1 : 1;\n    this.saveLikesToStorage(likes);\n  }\n  unlikePost(postId) {\n    const likes = this.getLikesFromStorage();\n    if (likes[postId]) {\n      likes[postId]--;\n      if (likes[postId] === 0) {\n        delete likes[postId];\n      }\n      this.saveLikesToStorage(likes);\n    }\n  }\n  getLikes() {\n    const likes = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\");\n    return likes;\n  }\n  saveLikesToStorage(likes) {\n    localStorage.setItem(this.storageKey, JSON.stringify(likes));\n  }\n  getLikesFromStorage() {\n    const likes = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\");\n    return likes;\n  }\n}\nLikesService.ɵfac = function LikesService_Factory(t) {\n  return new (t || LikesService)();\n};\nLikesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LikesService,\n  factory: LikesService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";AA+CA,OAAM,MAAOA,YAAY;EAGvBC;IAFQ,eAAU,GAAG,OAAO;EAEb;EAEfC,OAAO,CAACC,MAAc;IACpB,MAAMC,KAAK,GAAG,IAAI,CAACC,mBAAmB,EAAE;IACxCD,KAAK,CAACD,MAAM,CAAC,GAAGC,KAAK,CAACD,MAAM,CAAC,GAAGC,KAAK,CAACD,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;IACrD,IAAI,CAACG,kBAAkB,CAACF,KAAK,CAAC;EAChC;EAEAG,UAAU,CAACJ,MAAc;IACvB,MAAMC,KAAK,GAAG,IAAI,CAACC,mBAAmB,EAAE;IACxC,IAAID,KAAK,CAACD,MAAM,CAAC,EAAE;MACjBC,KAAK,CAACD,MAAM,CAAC,EAAE;MACf,IAAIC,KAAK,CAACD,MAAM,CAAC,KAAK,CAAC,EAAE;QACvB,OAAOC,KAAK,CAACD,MAAM,CAAC;;MAEtB,IAAI,CAACG,kBAAkB,CAACF,KAAK,CAAC;;EAElC;EAEAI,QAAQ;IACN,MAAMJ,KAAK,GAAGK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,IAAI,CAAC;IACvE,OAAOT,KAAK;EACd;EAEQE,kBAAkB,CAACF,KAAmC;IAC5DO,YAAY,CAACG,OAAO,CAAC,IAAI,CAACD,UAAU,EAAEJ,IAAI,CAACM,SAAS,CAACX,KAAK,CAAC,CAAC;EAC9D;EAEQC,mBAAmB;IACzB,MAAMD,KAAK,GAAGK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,IAAI,CAAC;IACvE,OAAOT,KAAK;EACd;;AAlCWJ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["LikesService","constructor","addLike","postId","likes","getLikesFromStorage","saveLikesToStorage","unlikePost","getLikes","JSON","parse","localStorage","getItem","storageKey","setItem","stringify","factory","providedIn"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/services/LikesService.service.ts"],"sourcesContent":["// import { Injectable } from \"@angular/core\";\n\n// @Injectable({\n//   providedIn: \"root\",\n// })\n// export interface LikesResponse {\n//     [postId: number]: number;\n//   }\n\n//   @Injectable({\n//     providedIn: 'root',\n//   })\n//   export class LikesService {\n//     private storageKey = 'likes';\n\n//     constructor() {}\n\n//     addLike(postId: number): void {\n//       const likes = this.getLikesFromStorage();\n//       likes[postId] = true;\n//       this.saveLikesToStorage(likes);\n//     }\n\n//     unlikePost(postId: number): void {\n//       const likes = this.getLikesFromStorage();\n//       delete likes[postId];\n//       this.saveLikesToStorage(likes);\n//     }\n\n//     getLikes(): LikesResponse {\n//       const likes = JSON.parse(localStorage.getItem(this.storageKey) || '{}');\n//       return likes;\n//     }\n\n//     private saveLikesToStorage(likes: LikesResponse): void {\n//       localStorage.setItem(this.storageKey, JSON.stringify(likes));\n//     }\n\n//     private getLikesFromStorage(): LikesResponse {\n//       const likes = JSON.parse(localStorage.getItem(this.storageKey\n//       }\n\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LikesService {\n  private storageKey = \"likes\";\n\n  constructor() {}\n\n  addLike(postId: number): void {\n    const likes = this.getLikesFromStorage();\n    likes[postId] = likes[postId] ? likes[postId] + 1 : 1;\n    this.saveLikesToStorage(likes);\n  }\n\n  unlikePost(postId: number): void {\n    const likes = this.getLikesFromStorage();\n    if (likes[postId]) {\n      likes[postId]--;\n      if (likes[postId] === 0) {\n        delete likes[postId];\n      }\n      this.saveLikesToStorage(likes);\n    }\n  }\n\n  getLikes(): { [postId: number]: number } {\n    const likes = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\");\n    return likes;\n  }\n\n  private saveLikesToStorage(likes: { [postId: number]: number }): void {\n    localStorage.setItem(this.storageKey, JSON.stringify(likes));\n  }\n\n  private getLikesFromStorage(): { [postId: number]: number } {\n    const likes = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\");\n    return likes;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}