{"ast":null,"code":"import { FormGroup, FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditingPostsComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"img\", 15);\n    i0.ɵɵelementStart(2, \"div\", 16)(3, \"h5\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.post.photo, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.post.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.post.text);\n  }\n}\nexport class EditingPostsComponent {\n  constructor(postsService, route, location) {\n    this.postsService = postsService;\n    this.route = route;\n    this.location = location;\n  }\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(),\n      lastName: new FormControl(),\n      title: new FormControl(),\n      text: new FormControl(),\n      photo: new FormControl()\n    });\n    this.route.paramMap.subscribe(params => {\n      let id = params.get(\"id\");\n      this.selectedPostId = id;\n      this.postsService.getOnePost(id).subscribe(post => {\n        this.post = post;\n        this.registerForm.patchValue({\n          name: this.post.name,\n          title: this.post.title,\n          text: this.post.text,\n          photo: this.post.photo\n        });\n      });\n    });\n  }\n  onSubmit() {\n    if (this.selectedPostId) {\n      const updatedPost = {\n        name: this.registerForm.value.name,\n        title: this.registerForm.value.title,\n        text: this.registerForm.value.text,\n        photo: this.registerForm.value.photo\n      };\n      this.postsService.updateData(this.selectedPostId, updatedPost).subscribe(post => {\n        this.post = post;\n      });\n    }\n  }\n  back() {\n    this.location.back();\n  }\n}\nEditingPostsComponent.ɵfac = function EditingPostsComponent_Factory(t) {\n  return new (t || EditingPostsComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Location));\n};\nEditingPostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditingPostsComponent,\n  selectors: [[\"app-editing-posts\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"editing-form\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"title\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"text\"], [\"formControlName\", \"text\", 1, \"form-control\"], [\"for\", \"photo\"], [\"type\", \"text\", \"formControlName\", \"photo\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"card\", \"style\", \"width: 18rem\", 4, \"ngIf\"], [1, \"card\", 2, \"width\", \"18rem\"], [\"alt\", \"...\", 1, \"card-img-top\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function EditingPostsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function EditingPostsComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Text\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"textarea\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Photo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \" Save Editings \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function EditingPostsComponent_Template_button_click_20_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵtext(21, \" Cancel \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(22, EditingPostsComponent_div_22_Template, 7, 3, \"div\", 13);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.post && ctx.selectedPostId === ctx.post._id);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%]{\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lZGl0aW5nLXBvc3RzL2VkaXRpbmctcG9zdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAkEA,SAASA,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;;;;;ICQvDC,+BAIC;IACCA,0BAA6D;IAC7DA,+BAAuB;IACEA,YAAe;IAAAA,iBAAK;IAC3CA,6BAAqB;IAAAA,YAAe;IAAAA,iBAAI;;;;IAHrCA,eAAsB;IAAtBA,oEAAsB;IAEFA,eAAe;IAAfA,sCAAe;IACjBA,eAAe;IAAfA,sCAAe;;;ADTxC,OAAM,MAAOC,qBAAqB;EAKhCC,YACUC,YAA0B,EAC1BC,KAAqB,EACrBC,QAAkB;IAFlB,iBAAY,GAAZF,YAAY;IACZ,UAAK,GAALC,KAAK;IACL,aAAQ,GAARC,QAAQ;EACf;EAEHC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAIT,SAAS,CAAC;MAChCU,IAAI,EAAE,IAAIT,WAAW,EAAE;MACvBU,QAAQ,EAAE,IAAIV,WAAW,EAAE;MAC3BW,KAAK,EAAE,IAAIX,WAAW,EAAE;MACxBY,IAAI,EAAE,IAAIZ,WAAW,EAAE;MACvBa,KAAK,EAAE,IAAIb,WAAW;KACvB,CAAC;IAEF,IAAI,CAACK,KAAK,CAACS,QAAQ,CAACC,SAAS,CAAEC,MAAM,IAAI;MACvC,IAAIC,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAE;MAC1B,IAAI,CAACC,cAAc,GAAGF,EAAE;MACxB,IAAI,CAACb,YAAY,CAACgB,UAAU,CAACH,EAAE,CAAC,CAACF,SAAS,CAAEM,IAAU,IAAI;QACxD,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACb,YAAY,CAACc,UAAU,CAAC;UAC3Bb,IAAI,EAAE,IAAI,CAACY,IAAI,CAACZ,IAAI;UACpBE,KAAK,EAAE,IAAI,CAACU,IAAI,CAACV,KAAK;UACtBC,IAAI,EAAE,IAAI,CAACS,IAAI,CAACT,IAAI;UACpBC,KAAK,EAAE,IAAI,CAACQ,IAAI,CAACR;SAClB,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAU,QAAQ;IACN,IAAI,IAAI,CAACJ,cAAc,EAAE;MACvB,MAAMK,WAAW,GAAG;QAClBf,IAAI,EAAE,IAAI,CAACD,YAAY,CAACiB,KAAK,CAAChB,IAAI;QAClCE,KAAK,EAAE,IAAI,CAACH,YAAY,CAACiB,KAAK,CAACd,KAAK;QACpCC,IAAI,EAAE,IAAI,CAACJ,YAAY,CAACiB,KAAK,CAACb,IAAI;QAClCC,KAAK,EAAE,IAAI,CAACL,YAAY,CAACiB,KAAK,CAACZ;OAChC;MACD,IAAI,CAACT,YAAY,CACdsB,UAAU,CAAC,IAAI,CAACP,cAAc,EAAEK,WAAW,CAAC,CAC5CT,SAAS,CAAEM,IAAU,IAAI;QACxB,IAAI,CAACA,IAAI,GAAGA,IAAI;MAClB,CAAC,CAAC;;EAER;EAEAM,IAAI;IACF,IAAI,CAACrB,QAAQ,CAACqB,IAAI,EAAE;EACtB;;AArDWzB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC9BlC/B,8BAA0B;MACoBA;QAAA,OAAYgC,cAAU;MAAA,EAAC;MACjEhC,8BAAwB;MACJA,oBAAI;MAAAA,iBAAQ;MAC9BA,2BAAiE;MACnEA,iBAAM;MACNA,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAkE;MACpEA,iBAAM;MACNA,+BAAwB;MACJA,qBAAI;MAAAA,iBAAQ;MAC9BA,+BAAiE;MACnEA,iBAAM;MACNA,+BAAwB;MACHA,sBAAK;MAAAA,iBAAQ;MAChCA,6BAAkE;MACpEA,iBAAM;MACNA,mCAIC;MACCA,gCACF;MAAAA,iBAAS;MACTA,mCAAiE;MAAjBA;QAAA,OAASgC,UAAM;MAAA,EAAC;MAC9DhC,yBACF;MAAAA,iBAAS;MAIbA,yEAUM;;;MAxCaA,eAA0B;MAA1BA,4CAA0B;MAoBvCA,gBAAgC;MAAhCA,kDAAgC;MAanCA,eAAyC;MAAzCA,sEAAyC","names":["FormGroup","FormControl","i0","EditingPostsComponent","constructor","postsService","route","location","ngOnInit","registerForm","name","lastName","title","text","photo","paramMap","subscribe","params","id","get","selectedPostId","getOnePost","post","patchValue","onSubmit","updatedPost","value","updateData","back","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/editing-posts/editing-posts.component.ts","/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/editing-posts/editing-posts.component.html"],"sourcesContent":["// import { Component, OnInit } from \"@angular/core\";\n// import { ActivatedRoute } from \"@angular/router\";\n// import { Post } from \"src/app/models/posts\";\n// import { PostsService } from \"src/app/services/posts.service\";\n// import { Location } from \"@angular/common\";\n// import { FormGroup, FormControl } from \"@angular/forms\";\n\n// @Component({\n//   selector: \"app-editing-posts\",\n//   templateUrl: \"./editing-posts.component.html\",\n//   styleUrls: [\"./editing-posts.component.css\"],\n// })\n// export class EditingPostsComponent implements OnInit {\n//   post!: Post;\n//   selectedPostId: string | undefined;\n//   updatedPost = {\n//     name: \"\",\n//     title: \"\",\n//     text: \"\",\n//     photo: \"\",\n//   };\n//   registerForm: FormGroup = new FormGroup({}); // ініціалізуємо registerForm\n\n//   constructor(\n//     private postsService: PostsService,\n//     private route: ActivatedRoute,\n//     private location: Location\n//   ) {}\n\n//   ngOnInit(): void {\n//     this.registerForm = new FormGroup({\n//       name: new FormControl(),\n//       title: new FormControl(),\n//       text: new FormControl(),\n//       photo: new FormControl(),\n//     });\n\n//     this.route.paramMap.subscribe((params) => {\n//       let id = params.get(\"id\")!;\n//       this.selectedPostId = id;\n//       this.postsService.getOnePost(id).subscribe((post: Post) => {\n//         this.post = post;\n//       });\n//     });\n//   }\n\n//   onSubmit(): void {\n//     if (this.selectedPostId) {\n//       this.postsService\n//         .updateData(this.selectedPostId, this.updatedPost)\n//         .subscribe((post: Post) => {\n//           this.post = post;\n//         });\n//     }\n//   }\n\n//   back() {\n//     this.location.back();\n//   }\n// }\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Post } from \"src/app/models/posts\";\nimport { PostsService } from \"src/app/services/posts.service\";\nimport { Location } from \"@angular/common\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-editing-posts\",\n  templateUrl: \"./editing-posts.component.html\",\n  styleUrls: [\"./editing-posts.component.css\"],\n})\nexport class EditingPostsComponent implements OnInit {\n  post!: Post;\n  selectedPostId: string | undefined;\n  registerForm!: FormGroup;\n\n  constructor(\n    private postsService: PostsService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name: new FormControl(),\n      lastName: new FormControl(),\n      title: new FormControl(),\n      text: new FormControl(),\n      photo: new FormControl(),\n    });\n\n    this.route.paramMap.subscribe((params) => {\n      let id = params.get(\"id\")!;\n      this.selectedPostId = id;\n      this.postsService.getOnePost(id).subscribe((post: Post) => {\n        this.post = post;\n        this.registerForm.patchValue({\n          name: this.post.name,\n          title: this.post.title,\n          text: this.post.text,\n          photo: this.post.photo,\n        });\n      });\n    });\n  }\n\n  onSubmit(): void {\n    if (this.selectedPostId) {\n      const updatedPost = {\n        name: this.registerForm.value.name,\n        title: this.registerForm.value.title,\n        text: this.registerForm.value.text,\n        photo: this.registerForm.value.photo,\n      };\n      this.postsService\n        .updateData(this.selectedPostId, updatedPost)\n        .subscribe((post: Post) => {\n          this.post = post;\n        });\n    }\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","<!-- <div class=\"editing-form\">\n  <form novalidate [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email address</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" />\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary\"\n      [disabled]=\"!registerForm.valid\"\n    >\n      Save editings\n    </button>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"back()\">\n      Go back\n    </button>\n  </form>\n</div>\n\n<div\n  class=\"card\"\n  style=\"width: 18rem\"\n  *ngIf=\"post && selectedPostId === post._id\"\n>\n  <img src=\"{{ post.photo }}\" class=\"card-img-top\" alt=\"...\" />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ post.name }}</h5>\n    <p class=\"card-text\">{{ post.text }}</p>\n  </div>\n</div> -->\n\n<div class=\"editing-form\">\n  <form novalidate [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"title\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"text\">Text</label>\n      <textarea class=\"form-control\" formControlName=\"text\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"photo\">Photo</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"photo\" />\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary\"\n      [disabled]=\"!registerForm.valid\"\n    >\n      Save Editings\n    </button>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"back()\">\n      Cancel\n    </button>\n  </form>\n</div>\n\n<div\n  class=\"card\"\n  style=\"width: 18rem\"\n  *ngIf=\"post && selectedPostId === post._id\"\n>\n  <img src=\"{{ post.photo }}\" class=\"card-img-top\" alt=\"...\" />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ post.name }}</h5>\n    <p class=\"card-text\">{{ post.text }}</p>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}