{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class TranslationService {\n  constructor() {\n    this.supportedLanguages = [\"en\", \"fr\", \"es\"];\n    this.currentLang = new BehaviorSubject(\"en\");\n    this.currentLang$ = this.currentLang.asObservable();\n    this.translations = {};\n  }\n  loadTranslations(lang) {\n    return fetch(`/assets/i18n/${lang}.json`).then(response => response.json()).then(translations => this.translations = translations);\n  }\n  getCurrentLang() {\n    return this.currentLang.value;\n  }\n  setLang(lang) {\n    this.currentLang.next(lang);\n  }\n  translate(key) {\n    return this.translations[key] || key;\n  }\n}\nTranslationService.ɵfac = function TranslationService_Factory(t) {\n  return new (t || TranslationService)();\n};\nTranslationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TranslationService,\n  factory: TranslationService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,kBAAkB;EAO7BC;IANA,uBAAkB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/B,gBAAW,GAAG,IAAIF,eAAe,CAAS,IAAI,CAAC;IACvD,iBAAY,GAAG,IAAI,CAACG,WAAW,CAACC,YAAY,EAAE;IAEtC,iBAAY,GAAQ,EAAE;EAEf;EAEfC,gBAAgB,CAACC,IAAY;IAC3B,OAAOC,KAAK,CAAC,gBAAgBD,IAAI,OAAO,CAAC,CACtCE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAM,IAAI,CAACA,YAAY,GAAGA,YAAa,CAAC;EAC/D;EAEAC,cAAc;IACZ,OAAO,IAAI,CAACT,WAAW,CAACU,KAAK;EAC/B;EAEAC,OAAO,CAACR,IAAY;IAClB,IAAI,CAACH,WAAW,CAACY,IAAI,CAACT,IAAI,CAAC;EAC7B;EAEAU,SAAS,CAACC,GAAW;IACnB,OAAO,IAAI,CAACN,YAAY,CAACM,GAAG,CAAC,IAAIA,GAAG;EACtC;;AAzBWhB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAiB,SAAlBjB,kBAAkB;EAAAkB,YAFjB;AAAM","names":["BehaviorSubject","TranslationService","constructor","currentLang","asObservable","loadTranslations","lang","fetch","then","response","json","translations","getCurrentLang","value","setLang","next","translate","key","factory","providedIn"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/services/translation.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TranslationService {\n  supportedLanguages = [\"en\", \"fr\", \"es\"];\n  private currentLang = new BehaviorSubject<string>(\"en\");\n  currentLang$ = this.currentLang.asObservable();\n\n  private translations: any = {};\n\n  constructor() {}\n\n  loadTranslations(lang: string): Promise<void> {\n    return fetch(`/assets/i18n/${lang}.json`)\n      .then((response) => response.json())\n      .then((translations) => (this.translations = translations));\n  }\n\n  getCurrentLang(): string {\n    return this.currentLang.value;\n  }\n\n  setLang(lang: string): void {\n    this.currentLang.next(lang);\n  }\n\n  translate(key: string): string {\n    return this.translations[key] || key;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}