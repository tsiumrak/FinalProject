{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LikesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:8080/api/posts\";\n    const likedPostsJson = localStorage.getItem(\"likedPosts\");\n    if (likedPostsJson) {\n      this.likedPosts = new Set(JSON.parse(likedPostsJson));\n    } else {\n      this.likedPosts = new Set();\n    }\n  }\n  isLiked(postId) {\n    return this.likedPosts.has(postId);\n  }\n  likePost(postId) {\n    this.likedPosts.add(postId);\n    localStorage.setItem(\"likedPosts\", JSON.stringify(Array.from(this.likedPosts)));\n  }\n  unlikePost(postId) {\n    this.likedPosts.delete(postId);\n    localStorage.setItem(\"likedPosts\", JSON.stringify(Array.from(this.likedPosts)));\n  }\n  addLike(postId) {\n    return this.http.post(`${this.apiUrl}/likes/${postId}`, {});\n  }\n  getLikes(postId) {\n    return this.http.get(`${this.apiUrl}/likes/${postId}`);\n  }\n}\nLikesService.ɵfac = function LikesService_Factory(t) {\n  return new (t || LikesService)(i0.ɵɵinject(i1.HttpClient));\n};\nLikesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LikesService,\n  factory: LikesService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAG,iCAAiC;IAGxC,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACzD,IAAIF,cAAc,EAAE;MAClB,IAAI,CAACG,UAAU,GAAG,IAAIC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC,CAAC;KACtD,MAAM;MACL,IAAI,CAACG,UAAU,GAAG,IAAIC,GAAG,EAAE;;EAE/B;EAEAG,OAAO,CAACC,MAAc;IACpB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAACD,MAAM,CAAC;EACpC;EAEAE,QAAQ,CAACF,MAAc;IACrB,IAAI,CAACL,UAAU,CAACQ,GAAG,CAACH,MAAM,CAAC;IAC3BP,YAAY,CAACW,OAAO,CAClB,YAAY,EACZP,IAAI,CAACQ,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC5C;EACH;EAEAa,UAAU,CAACR,MAAc;IACvB,IAAI,CAACL,UAAU,CAACc,MAAM,CAACT,MAAM,CAAC;IAC9BP,YAAY,CAACW,OAAO,CAClB,YAAY,EACZP,IAAI,CAACQ,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC5C;EACH;EAEAe,OAAO,CAACV,MAAc;IACpB,OAAO,IAAI,CAACT,IAAI,CAACoB,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUZ,MAAM,EAAE,EAAE,EAAE,CAAC;EAC7D;EAEAa,QAAQ,CAACb,MAAc;IACrB,OAAO,IAAI,CAACT,IAAI,CAACuB,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,UAAUZ,MAAM,EAAE,CAAC;EAChE;;AAvCWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA0B,SAAZ1B,YAAY;EAAA2B,YAFX;AAAM","names":["LikesService","constructor","http","likedPostsJson","localStorage","getItem","likedPosts","Set","JSON","parse","isLiked","postId","has","likePost","add","setItem","stringify","Array","from","unlikePost","delete","addLike","post","apiUrl","getLikes","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/services/LikesService.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LikesService {\n  private likedPosts: Set<number>;\n  apiUrl = \"http://localhost:8080/api/posts\";\n\n  constructor(private http: HttpClient) {\n    const likedPostsJson = localStorage.getItem(\"likedPosts\");\n    if (likedPostsJson) {\n      this.likedPosts = new Set(JSON.parse(likedPostsJson));\n    } else {\n      this.likedPosts = new Set();\n    }\n  }\n\n  isLiked(postId: number): boolean {\n    return this.likedPosts.has(postId);\n  }\n\n  likePost(postId: number): void {\n    this.likedPosts.add(postId);\n    localStorage.setItem(\n      \"likedPosts\",\n      JSON.stringify(Array.from(this.likedPosts))\n    );\n  }\n\n  unlikePost(postId: number): void {\n    this.likedPosts.delete(postId);\n    localStorage.setItem(\n      \"likedPosts\",\n      JSON.stringify(Array.from(this.likedPosts))\n    );\n  }\n\n  addLike(postId: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/likes/${postId}`, {});\n  }\n\n  getLikes(postId: string): Observable<number> {\n    return this.http.get<number>(`${this.apiUrl}/likes/${postId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}