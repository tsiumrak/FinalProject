{"ast":null,"code":"// import { Component, OnInit } from \"@angular/core\";\n// import { forkJoin, Observable } from \"rxjs\";\n// import { map, mergeMap } from \"rxjs/operators\";\n// import { Post } from \"src/app/models/posts\";\n// import { PostsService } from \"src/app/services/posts.service\";\n// import { LikesService } from \"src/app/services/LikesService.service\";\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: \"app-top10\",\n//   templateUrl: \"./top10.component.html\",\n//   styleUrls: [\"./top10.component.css\"],\n// })\n// export class Top10Component implements OnInit {\n//   topPosts: Post[] = [];\n//   constructor(\n//     private postsService: PostsService,\n//     private likesService: LikesService\n//   ) {}\n//   ngOnInit(): void {\n//     this.postsService\n//       .getPosts()\n//       .pipe(\n//         mergeMap((posts) => {\n//           const likes$ = posts.map((post) =>\n//             this.likesService.getLikes(+post._id).pipe(\n//               map((likes) => ({\n//                 ...post,\n//                 likes: likes?.likes ?? null,\n//               }))\n//             )\n//           );\n//           return forkJoin(likes$).pipe(\n//             map((postsWithLikes) =>\n//               postsWithLikes\n//                 .filter((post) => post.likes !== null)\n//                 .sort((a, b) => b.likes - a.likes)\n//                 .slice(0, 10)\n//             )\n//           );\n//         })\n//       )\n//       .subscribe((topPosts) => {\n//         this.topPosts = topPosts;\n//       });\n//   }\n// }\nimport { Component } from \"@angular/core\";\nlet Top10Component = class Top10Component {\n  constructor(postsService, likesService) {\n    this.postsService = postsService;\n    this.likesService = likesService;\n    this.top10Posts = [];\n  }\n  ngOnInit() {\n    this.postsService.getPosts().subscribe(posts => {\n      const postsWithLikes = posts.map(post => {\n        const likes = this.likesService.getLikes(+post._id)?.likes ?? null;\n        return {\n          ...post,\n          likes\n        };\n      });\n      postsWithLikes.sort((a, b) => (b.likes ?? 0) - (a.likes ?? 0));\n      this.top10Posts = postsWithLikes.slice(0, 10);\n    });\n  }\n};\nTop10Component = __decorate([Component({\n  selector: \"app-top10\",\n  templateUrl: \"./top10.component.html\",\n  styleUrls: [\"./top10.component.css\"]\n})], Top10Component);\nexport { Top10Component };","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,YAA0B,EAC1BC,YAA0B;IAD1B,iBAAY,GAAZD,YAAY;IACZ,iBAAY,GAAZC,YAAY;IAJtB,eAAU,GAAW,EAAE;EAKpB;EAEHC,QAAQ;IACN,IAAI,CAACF,YAAY,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC/C,MAAMC,cAAc,GAAGD,KAAK,CAACE,GAAG,CAAEC,IAAI,IAAI;QACxC,MAAMC,KAAK,GAAG,IAAI,CAACR,YAAY,CAACS,QAAQ,CAAC,CAACF,IAAI,CAACG,GAAG,CAAC,EAAEF,KAAK,IAAI,IAAI;QAClE,OAAO;UAAE,GAAGD,IAAI;UAAEC;QAAK,CAAE;MAC3B,CAAC,CAAC;MACFH,cAAc,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAACL,KAAK,IAAI,CAAC,KAAKI,CAAC,CAACJ,KAAK,IAAI,CAAC,CAAC,CAAC;MAC9D,IAAI,CAACM,UAAU,GAAGT,cAAc,CAACU,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/C,CAAC,CAAC;EACJ;CACD;AAlBYlB,cAAc,eAL1BD,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWrB,cAAc,CAkB1B;SAlBYA,cAAc","names":["Component","Top10Component","constructor","postsService","likesService","ngOnInit","getPosts","subscribe","posts","postsWithLikes","map","post","likes","getLikes","_id","sort","a","b","top10Posts","slice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/top10/top10.component.ts"],"sourcesContent":["// import { Component, OnInit } from \"@angular/core\";\n// import { forkJoin, Observable } from \"rxjs\";\n// import { map, mergeMap } from \"rxjs/operators\";\n// import { Post } from \"src/app/models/posts\";\n// import { PostsService } from \"src/app/services/posts.service\";\n// import { LikesService } from \"src/app/services/LikesService.service\";\n\n// @Component({\n//   selector: \"app-top10\",\n//   templateUrl: \"./top10.component.html\",\n//   styleUrls: [\"./top10.component.css\"],\n// })\n// export class Top10Component implements OnInit {\n//   topPosts: Post[] = [];\n\n//   constructor(\n//     private postsService: PostsService,\n//     private likesService: LikesService\n//   ) {}\n\n//   ngOnInit(): void {\n//     this.postsService\n//       .getPosts()\n//       .pipe(\n//         mergeMap((posts) => {\n//           const likes$ = posts.map((post) =>\n//             this.likesService.getLikes(+post._id).pipe(\n//               map((likes) => ({\n//                 ...post,\n//                 likes: likes?.likes ?? null,\n//               }))\n//             )\n//           );\n//           return forkJoin(likes$).pipe(\n//             map((postsWithLikes) =>\n//               postsWithLikes\n//                 .filter((post) => post.likes !== null)\n//                 .sort((a, b) => b.likes - a.likes)\n//                 .slice(0, 10)\n//             )\n//           );\n//         })\n//       )\n//       .subscribe((topPosts) => {\n//         this.topPosts = topPosts;\n//       });\n//   }\n// }\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { Post } from \"../../models/post\";\nimport { PostsService } from \"../../services/posts.service\";\nimport { LikesService } from \"../../services/likes.service\";\n\n@Component({\n  selector: \"app-top10\",\n  templateUrl: \"./top10.component.html\",\n  styleUrls: [\"./top10.component.css\"],\n})\nexport class Top10Component implements OnInit {\n  top10Posts: Post[] = [];\n\n  constructor(\n    private postsService: PostsService,\n    private likesService: LikesService\n  ) {}\n\n  ngOnInit(): void {\n    this.postsService.getPosts().subscribe((posts) => {\n      const postsWithLikes = posts.map((post) => {\n        const likes = this.likesService.getLikes(+post._id)?.likes ?? null;\n        return { ...post, likes };\n      });\n      postsWithLikes.sort((a, b) => (b.likes ?? 0) - (a.likes ?? 0));\n      this.top10Posts = postsWithLikes.slice(0, 10);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}