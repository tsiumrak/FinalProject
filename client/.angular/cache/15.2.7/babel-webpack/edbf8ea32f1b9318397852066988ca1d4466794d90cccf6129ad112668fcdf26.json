{"ast":null,"code":"import { mergeMap, map } from \"rxjs/operators\";\nimport { forkJoin } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/posts.service\";\nimport * as i2 from \"src/app/services/LikesService.service\";\nexport class Top10Component {\n  constructor(postsService, likesService) {\n    this.postsService = postsService;\n    this.likesService = likesService;\n    this.topPosts = [];\n  }\n  ngOnInit() {\n    this.postsService.getPosts().pipe(mergeMap(posts => {\n      const likes$ = posts.map(post => this.likesService.getLikes(post.id));\n      return forkJoin(likes$).pipe(map(likes => posts.map((post, i) => ({\n        ...post,\n        likes: likes[i]\n      }))));\n    }), map(posts => posts.sort((a, b) => b.likes - a.likes)), map(posts => posts.slice(0, 5))).subscribe(posts => {\n      this.topPosts = posts;\n    });\n  }\n}\nTop10Component.ɵfac = function Top10Component_Factory(t) {\n  return new (t || Top10Component)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.LikesService));\n};\nTop10Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Top10Component,\n  selectors: [[\"app-top10\"]],\n  decls: 2,\n  vars: 0,\n  template: function Top10Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"top10 works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAG9C,SAASC,QAAQ,QAAQ,MAAM;;;;AAO/B,OAAM,MAAOC,cAAc;EAGzBC,YACUC,YAA0B,EAC1BC,YAA0B;IAD1B,iBAAY,GAAZD,YAAY;IACZ,iBAAY,GAAZC,YAAY;IAJtB,aAAQ,GAAG,EAAE;EAKV;EAEHC,QAAQ;IACN,IAAI,CAACF,YAAY,CACdG,QAAQ,EAAE,CACVC,IAAI,CACHT,QAAQ,CAAEU,KAAK,IAAI;MACjB,MAAMC,MAAM,GAAGD,KAAK,CAACT,GAAG,CAAEW,IAAI,IAC5B,IAAI,CAACN,YAAY,CAACO,QAAQ,CAACD,IAAI,CAACE,EAAE,CAAC,CACpC;MACD,OAAOZ,QAAQ,CAACS,MAAM,CAAC,CAACF,IAAI,CAC1BR,GAAG,CAAEc,KAAK,IACRL,KAAK,CAACT,GAAG,CAAC,CAACW,IAAI,EAAEI,CAAC,MAAM;QAAE,GAAGJ,IAAI;QAAEG,KAAK,EAAEA,KAAK,CAACC,CAAC;MAAC,CAAE,CAAC,CAAC,CACvD,CACF;IACH,CAAC,CAAC,EACFf,GAAG,CAAES,KAAa,IAChBA,KAAK,CAACO,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAKA,CAAC,CAACJ,KAAK,GAAGG,CAAC,CAACH,KAAK,CAAC,CACpD,EAEDd,GAAG,CAAES,KAAK,IAAKA,KAAK,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAClC,CACAC,SAAS,CAAEX,KAAK,IAAI;MACnB,IAAI,CAACY,QAAQ,GAAGZ,KAAK;IACvB,CAAC,CAAC;EACN;;AA/BWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["mergeMap","map","forkJoin","Top10Component","constructor","postsService","likesService","ngOnInit","getPosts","pipe","posts","likes$","post","getLikes","id","likes","i","sort","a","b","slice","subscribe","topPosts","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/top10/top10.component.ts","/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/top10/top10.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { mergeMap, map } from \"rxjs/operators\";\nimport { PostsService } from \"src/app/services/posts.service\";\nimport { LikesService } from \"src/app/services/LikesService.service\";\nimport { forkJoin } from \"rxjs\";\n\n@Component({\n  selector: \"app-top10\",\n  templateUrl: \"./top10.component.html\",\n  styleUrls: [\"./top10.component.css\"],\n})\nexport class Top10Component implements OnInit {\n  topPosts = [];\n\n  constructor(\n    private postsService: PostsService,\n    private likesService: LikesService\n  ) {}\n\n  ngOnInit() {\n    this.postsService\n      .getPosts()\n      .pipe(\n        mergeMap((posts) => {\n          const likes$ = posts.map((post) =>\n            this.likesService.getLikes(post.id)\n          );\n          return forkJoin(likes$).pipe(\n            map((likes) =>\n              posts.map((post, i) => ({ ...post, likes: likes[i] }))\n            )\n          );\n        }),\n        map((posts: Post[]) =>\n          posts.sort((a: Post, b: Post) => b.likes - a.likes)\n        ),\n\n        map((posts) => posts.slice(0, 5))\n      )\n      .subscribe((posts) => {\n        this.topPosts = posts;\n      });\n  }\n}\n","<p>top10 works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}