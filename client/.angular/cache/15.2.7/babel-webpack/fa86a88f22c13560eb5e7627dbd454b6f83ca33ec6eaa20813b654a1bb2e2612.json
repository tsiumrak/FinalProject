{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nconst _c0 = [\"*\"];\nclass MapEventManager {\n  /** Clears all currently-registered event listeners. */\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n    this._listeners = [];\n  }\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n          return undefined;\n        }\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n        // return a dummy object that returns `undefined` from `addListener` (see #26514).\n        if (!listener) {\n          observer.complete();\n          return undefined;\n        }\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n    if (target === currentTarget) {\n      return;\n    }\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n    this._targetStream.next(target);\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n  set center(center) {\n    this._center = center;\n  }\n  set zoom(zoom) {\n    this._zoom = zoom;\n  }\n  set options(options) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  constructor(_elementRef, _ngZone, platformId) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n    this.mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n    this.authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n        this.authFailure.emit();\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n    const googleMap = this.googleMap;\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n      this._setSize();\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n      this._eventManager.setTarget(this.googleMap);\n      this.mapInitialized.emit(this.googleMap);\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(bounds, padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x, y) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(latLngBounds, padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons() {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading() {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId() {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection() {\n    this._assertInitialized();\n    return this.googleMap.getProjection() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView() {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt() {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom() {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls() {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data() {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes() {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes() {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n  _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n  /** Combines the center and zoom and the other map options into a single object */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    };\n  }\n  /** Asserts that the map has been initialized. */\n  _assertInitialized() {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\nGoogleMap.ɵfac = function GoogleMap_Factory(t) {\n  return new (t || GoogleMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nGoogleMap.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleMap,\n  selectors: [[\"google-map\"]],\n  inputs: {\n    height: \"height\",\n    width: \"width\",\n    mapTypeId: \"mapTypeId\",\n    center: \"center\",\n    zoom: \"zoom\",\n    options: \"options\"\n  },\n  outputs: {\n    mapInitialized: \"mapInitialized\",\n    authFailure: \"authFailure\",\n    boundsChanged: \"boundsChanged\",\n    centerChanged: \"centerChanged\",\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    mapDragstart: \"mapDragstart\",\n    headingChanged: \"headingChanged\",\n    idle: \"idle\",\n    maptypeidChanged: \"maptypeidChanged\",\n    mapMousemove: \"mapMousemove\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    projectionChanged: \"projectionChanged\",\n    mapRightclick: \"mapRightclick\",\n    tilesloaded: \"tilesloaded\",\n    tiltChanged: \"tiltChanged\",\n    zoomChanged: \"zoomChanged\"\n  },\n  exportAs: [\"googleMap\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"map-container\"]],\n  template: function GoogleMap_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapInitialized: [{\n      type: Output\n    }],\n    authFailure: [{\n      type: Output\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }]\n  });\n})();\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n  _initializeObject() {}\n  _setMap() {}\n  _unsetMap() {}\n}\nMapBaseLayer.ɵfac = function MapBaseLayer_Factory(t) {\n  return new (t || MapBaseLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapBaseLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBaseLayer,\n  selectors: [[\"map-base-layer\"]],\n  exportAs: [\"mapBaseLayer\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n  _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap);\n  }\n  _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n  _assertLayerInitialized() {\n    if (!this.bicyclingLayer) {\n      throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\nMapBicyclingLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapBicyclingLayer_BaseFactory;\n  return function MapBicyclingLayer_Factory(t) {\n    return (ɵMapBicyclingLayer_BaseFactory || (ɵMapBicyclingLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapBicyclingLayer)))(t || MapBicyclingLayer);\n  };\n}();\nMapBicyclingLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapBicyclingLayer,\n  selectors: [[\"map-bicycling-layer\"]],\n  exportAs: [\"mapBicyclingLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer'\n    }]\n  }], null, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set center(center) {\n    this._center.next(center);\n  }\n  set radius(radius) {\n    this._radius.next(radius);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap);\n        this._eventManager.setTarget(this.circle);\n      });\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius() {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n      const combinedOptions = {\n        ...options,\n        center: center || options.center,\n        radius: radius !== undefined ? radius : options.radius\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n  _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n  _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.circle) {\n        throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapCircle.ɵfac = function MapCircle_Factory(t) {\n  return new (t || MapCircle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapCircle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapCircle,\n  selectors: [[\"map-circle\"]],\n  inputs: {\n    options: \"options\",\n    center: \"center\",\n    radius: \"radius\"\n  },\n  outputs: {\n    centerChanged: \"centerChanged\",\n    circleClick: \"circleClick\",\n    circleDblclick: \"circleDblclick\",\n    circleDrag: \"circleDrag\",\n    circleDragend: \"circleDragend\",\n    circleDragstart: \"circleDragstart\",\n    circleMousedown: \"circleMousedown\",\n    circleMousemove: \"circleMousemove\",\n    circleMouseout: \"circleMouseout\",\n    circleMouseover: \"circleMouseover\",\n    circleMouseup: \"circleMouseup\",\n    radiusChanged: \"radiusChanged\",\n    circleRightclick: \"circleRightclick\"\n  },\n  exportAs: [\"mapCircle\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  set directions(directions) {\n    this._directions = directions;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.directionsRenderer.setMap(this._googleMap.googleMap);\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n  ngOnChanges(changes) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections() {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel() {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex() {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.directionsRenderer) {\n        throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n      }\n    }\n  }\n}\nMapDirectionsRenderer.ɵfac = function MapDirectionsRenderer_Factory(t) {\n  return new (t || MapDirectionsRenderer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapDirectionsRenderer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapDirectionsRenderer,\n  selectors: [[\"map-directions-renderer\"]],\n  inputs: {\n    directions: \"directions\",\n    options: \"options\"\n  },\n  outputs: {\n    directionsChanged: \"directionsChanged\"\n  },\n  exportAs: [\"mapDirectionsRenderer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    directionsChanged: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n  /** URL of the image that will be shown in the overlay. */\n  set url(url) {\n    this._url.next(url);\n  }\n  /** Bounds for the overlay. */\n  get bounds() {\n    return this._bounds.value;\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  /** Opacity of the overlay. */\n  set opacity(opacity) {\n    this._opacity.next(opacity);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value\n            });\n          });\n          this._assertInitialized();\n          this.groundOverlay.setMap(this._map.googleMap);\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n  _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap);\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.groundOverlay) {\n        throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapGroundOverlay.ɵfac = function MapGroundOverlay_Factory(t) {\n  return new (t || MapGroundOverlay)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapGroundOverlay.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapGroundOverlay,\n  selectors: [[\"map-ground-overlay\"]],\n  inputs: {\n    url: \"url\",\n    bounds: \"bounds\",\n    clickable: \"clickable\",\n    opacity: \"opacity\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\"\n  },\n  exportAs: [\"mapGroundOverlay\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set position(position) {\n    this._position.next(position);\n  }\n  constructor(_googleMap, _elementRef, _ngZone) {\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n        this._eventManager.setTarget(this.infoWindow);\n      });\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent() {\n    this._assertInitialized();\n    return this.infoWindow.getContent() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.infoWindow.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor, shouldFocus) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      // The config is cast to `any`, because the internal typings are out of date.\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus\n      });\n    }\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n  _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.infoWindow) {\n        throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n      }\n    }\n  }\n}\nMapInfoWindow.ɵfac = function MapInfoWindow_Factory(t) {\n  return new (t || MapInfoWindow)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapInfoWindow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapInfoWindow,\n  selectors: [[\"map-info-window\"]],\n  hostAttrs: [2, \"display\", \"none\"],\n  inputs: {\n    options: \"options\",\n    position: \"position\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    contentChanged: \"contentChanged\",\n    domready: \"domready\",\n    positionChanged: \"positionChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapInfoWindow\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set url(url) {\n    this._url.next(url);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n        this._assertInitialized();\n        this.kmlLayer.setMap(this._map.googleMap);\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport() {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata() {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus() {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions = {\n        ...options,\n        url: url || options.url\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.kmlLayer) {\n        throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapKmlLayer.ɵfac = function MapKmlLayer_Factory(t) {\n  return new (t || MapKmlLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapKmlLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapKmlLayer,\n  selectors: [[\"map-kml-layer\"]],\n  inputs: {\n    options: \"options\",\n    url: \"url\"\n  },\n  outputs: {\n    kmlClick: \"kmlClick\",\n    defaultviewportChanged: \"defaultviewportChanged\",\n    statusChanged: \"statusChanged\"\n  },\n  exportAs: [\"mapKmlLayer\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  set label(label) {\n    this._label = label;\n  }\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  set clickable(clickable) {\n    this._clickable = clickable;\n  }\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  set icon(icon) {\n    this._icon = icon;\n  }\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n  set visible(value) {\n    this._visible = value;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.marker.setMap(this._googleMap.googleMap);\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      marker,\n      _title,\n      _position,\n      _label,\n      _clickable,\n      _icon,\n      _visible\n    } = this;\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation() {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable() {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor() {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon() {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel() {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape() {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle() {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor() {\n    this._assertInitialized();\n    return this.marker;\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.marker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapMarker.ɵfac = function MapMarker_Factory(t) {\n  return new (t || MapMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapMarker.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapMarker,\n  selectors: [[\"map-marker\"]],\n  inputs: {\n    title: \"title\",\n    position: \"position\",\n    label: \"label\",\n    clickable: \"clickable\",\n    options: \"options\",\n    icon: \"icon\",\n    visible: \"visible\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    mapClick: \"mapClick\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    draggableChanged: \"draggableChanged\",\n    mapDragstart: \"mapDragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mapMousedown: \"mapMousedown\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    mapMouseup: \"mapMouseup\",\n    positionChanged: \"positionChanged\",\n    mapRightclick: \"mapRightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapMarker\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n  set averageCenter(averageCenter) {\n    this._averageCenter = averageCenter;\n  }\n  set batchSizeIE(batchSizeIE) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  set calculator(calculator) {\n    this._calculator = calculator;\n  }\n  set clusterClass(clusterClass) {\n    this._clusterClass = clusterClass;\n  }\n  set enableRetinaIcons(enableRetinaIcons) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  set gridSize(gridSize) {\n    this._gridSize = gridSize;\n  }\n  set ignoreHidden(ignoreHidden) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  set imageExtension(imageExtension) {\n    this._imageExtension = imageExtension;\n  }\n  set imagePath(imagePath) {\n    this._imagePath = imagePath;\n  }\n  set imageSizes(imageSizes) {\n    this._imageSizes = imageSizes;\n  }\n  set maxZoom(maxZoom) {\n    this._maxZoom = maxZoom;\n  }\n  set minimumClusterSize(minimumClusterSize) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  set styles(styles) {\n    this._styles = styles;\n  }\n  set title(title) {\n    this._title = title;\n  }\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n  set zoomOnClick(zoomOnClick) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._destroy = new Subject();\n    this.ariaLabelFn = () => '';\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n  ngOnInit() {\n    if (this._canInitialize) {\n      if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n      }\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n      });\n      this._assertInitialized();\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick\n    } = this;\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n  fitMapToMarkers(padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n  getAverageCenter() {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n  getBatchSizeIE() {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n  getCalculator() {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n  getClusterClass() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n  getClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n  getEnableRetinaIcons() {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n  getGridSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n  getIgnoreHidden() {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n  getImageExtension() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n  getImagePath() {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n  getImageSizes() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n  getMaxZoom() {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n  getMinimumClusterSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n  getStyles() {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n  getTitle() {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n  getTotalClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n  getTotalMarkers() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n  getZIndex() {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n  getZoomOnClick() {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n  _combineOptions() {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick\n    };\n  }\n  _watchForMarkerChanges() {\n    this._assertInitialized();\n    const initialMarkers = [];\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n      initialMarkers.push(marker);\n    }\n    this.markerClusterer.addMarkers(initialMarkers);\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n      this._assertInitialized();\n      const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n      const markersToAdd = [];\n      const markersToRemove = [];\n      for (const marker of Array.from(newMarkers)) {\n        if (!this._currentMarkers.has(marker)) {\n          this._currentMarkers.add(marker);\n          markersToAdd.push(marker);\n        }\n      }\n      for (const marker of Array.from(this._currentMarkers)) {\n        if (!newMarkers.has(marker)) {\n          markersToRemove.push(marker);\n        }\n      }\n      this.markerClusterer.addMarkers(markersToAdd, true);\n      this.markerClusterer.removeMarkers(markersToRemove, true);\n      this.markerClusterer.repaint();\n      for (const marker of markersToRemove) {\n        this._currentMarkers.delete(marker);\n      }\n    });\n  }\n  _getInternalMarkers(markers) {\n    return markers.filter(markerComponent => !!markerComponent.marker).map(markerComponent => markerComponent.marker);\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.markerClusterer) {\n        throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapMarkerClusterer.ɵfac = function MapMarkerClusterer_Factory(t) {\n  return new (t || MapMarkerClusterer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapMarkerClusterer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MapMarkerClusterer,\n  selectors: [[\"map-marker-clusterer\"]],\n  contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n    }\n  },\n  inputs: {\n    ariaLabelFn: \"ariaLabelFn\",\n    averageCenter: \"averageCenter\",\n    batchSize: \"batchSize\",\n    batchSizeIE: \"batchSizeIE\",\n    calculator: \"calculator\",\n    clusterClass: \"clusterClass\",\n    enableRetinaIcons: \"enableRetinaIcons\",\n    gridSize: \"gridSize\",\n    ignoreHidden: \"ignoreHidden\",\n    imageExtension: \"imageExtension\",\n    imagePath: \"imagePath\",\n    imageSizes: \"imageSizes\",\n    maxZoom: \"maxZoom\",\n    minimumClusterSize: \"minimumClusterSize\",\n    styles: \"styles\",\n    title: \"title\",\n    zIndex: \"zIndex\",\n    zoomOnClick: \"zoomOnClick\",\n    options: \"options\"\n  },\n  outputs: {\n    clusteringbegin: \"clusteringbegin\",\n    clusteringend: \"clusteringend\",\n    clusterClick: \"clusterClick\"\n  },\n  exportAs: [\"mapMarkerClusterer\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MapMarkerClusterer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set paths(paths) {\n    this._paths.next(paths);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap);\n        this._eventManager.setTarget(this.polygon);\n      });\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths() {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions = {\n        ...options,\n        paths: paths || options.paths\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polygon) {\n        throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapPolygon.ɵfac = function MapPolygon_Factory(t) {\n  return new (t || MapPolygon)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapPolygon.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolygon,\n  selectors: [[\"map-polygon\"]],\n  inputs: {\n    options: \"options\",\n    paths: \"paths\"\n  },\n  outputs: {\n    polygonClick: \"polygonClick\",\n    polygonDblclick: \"polygonDblclick\",\n    polygonDrag: \"polygonDrag\",\n    polygonDragend: \"polygonDragend\",\n    polygonDragstart: \"polygonDragstart\",\n    polygonMousedown: \"polygonMousedown\",\n    polygonMousemove: \"polygonMousemove\",\n    polygonMouseout: \"polygonMouseout\",\n    polygonMouseover: \"polygonMouseover\",\n    polygonMouseup: \"polygonMouseup\",\n    polygonRightclick: \"polygonRightclick\"\n  },\n  exportAs: [\"mapPolygon\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set path(path) {\n    this._path.next(path);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap);\n        this._eventManager.setTarget(this.polyline);\n      });\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions = {\n        ...options,\n        path: path || options.path\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polyline) {\n        throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapPolyline.ɵfac = function MapPolyline_Factory(t) {\n  return new (t || MapPolyline)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapPolyline.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapPolyline,\n  selectors: [[\"map-polyline\"]],\n  inputs: {\n    options: \"options\",\n    path: \"path\"\n  },\n  outputs: {\n    polylineClick: \"polylineClick\",\n    polylineDblclick: \"polylineDblclick\",\n    polylineDrag: \"polylineDrag\",\n    polylineDragend: \"polylineDragend\",\n    polylineDragstart: \"polylineDragstart\",\n    polylineMousedown: \"polylineMousedown\",\n    polylineMousemove: \"polylineMousemove\",\n    polylineMouseout: \"polylineMouseout\",\n    polylineMouseover: \"polylineMouseover\",\n    polylineMouseup: \"polylineMouseup\",\n    polylineRightclick: \"polylineRightclick\"\n  },\n  exportAs: [\"mapPolyline\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap);\n        this._eventManager.setTarget(this.rectangle);\n      });\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions = {\n        ...options,\n        bounds: bounds || options.bounds\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n  _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.rectangle) {\n        throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapRectangle.ɵfac = function MapRectangle_Factory(t) {\n  return new (t || MapRectangle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapRectangle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapRectangle,\n  selectors: [[\"map-rectangle\"]],\n  inputs: {\n    options: \"options\",\n    bounds: \"bounds\"\n  },\n  outputs: {\n    boundsChanged: \"boundsChanged\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblclick: \"rectangleDblclick\",\n    rectangleDrag: \"rectangleDrag\",\n    rectangleDragend: \"rectangleDragend\",\n    rectangleDragstart: \"rectangleDragstart\",\n    rectangleMousedown: \"rectangleMousedown\",\n    rectangleMousemove: \"rectangleMousemove\",\n    rectangleMouseout: \"rectangleMouseout\",\n    rectangleMouseover: \"rectangleMouseover\",\n    rectangleMouseup: \"rectangleMouseup\",\n    rectangleRightclick: \"rectangleRightclick\"\n  },\n  exportAs: [\"mapRectangle\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  set autoRefresh(autoRefresh) {\n    this._autoRefresh.next(autoRefresh);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n        this._assertInitialized();\n        this.trafficLayer.setMap(this._map.googleMap);\n      });\n      this._watchForAutoRefreshChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n  _combineOptions() {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions = {\n        autoRefresh\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.trafficLayer) {\n      throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n}\nMapTrafficLayer.ɵfac = function MapTrafficLayer_Factory(t) {\n  return new (t || MapTrafficLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapTrafficLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTrafficLayer,\n  selectors: [[\"map-traffic-layer\"]],\n  inputs: {\n    autoRefresh: \"autoRefresh\"\n  },\n  exportAs: [\"mapTrafficLayer\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    autoRefresh: [{\n      type: Input\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer extends MapBaseLayer {\n  _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n  _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap);\n  }\n  _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n  _assertLayerInitialized() {\n    if (!this.transitLayer) {\n      throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\nMapTransitLayer.ɵfac = /* @__PURE__ */function () {\n  let ɵMapTransitLayer_BaseFactory;\n  return function MapTransitLayer_Factory(t) {\n    return (ɵMapTransitLayer_BaseFactory || (ɵMapTransitLayer_BaseFactory = i0.ɵɵgetInheritedFactory(MapTransitLayer)))(t || MapTransitLayer);\n  };\n}();\nMapTransitLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapTransitLayer,\n  selectors: [[\"map-transit-layer\"]],\n  exportAs: [\"mapTransitLayer\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer'\n    }]\n  }], null, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  set data(data) {\n    this._data = data;\n  }\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.heatmap.setMap(this._googleMap.googleMap);\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      _data,\n      heatmap\n    } = this;\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData() {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap\n    };\n  }\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  _normalizeData(data) {\n    const result = [];\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n    return result;\n  }\n  /** Asserts that the heatmap object has been initialized. */\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.heatmap) {\n        throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n}\nMapHeatmapLayer.ɵfac = function MapHeatmapLayer_Factory(t) {\n  return new (t || MapHeatmapLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMapHeatmapLayer.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MapHeatmapLayer,\n  selectors: [[\"map-heatmap-layer\"]],\n  inputs: {\n    data: \"data\",\n    options: \"options\"\n  },\n  exportAs: [\"mapHeatmapLayer\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer];\nclass GoogleMapsModule {}\nGoogleMapsModule.ɵfac = function GoogleMapsModule_Factory(t) {\n  return new (t || GoogleMapsModule)();\n};\nGoogleMapsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GoogleMapsModule\n});\nGoogleMapsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request) {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n      this._directionsService.route(request, (result, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            result: result || undefined,\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n}\nMapDirectionsService.ɵfac = function MapDirectionsService_Factory(t) {\n  return new (t || MapDirectionsService)(i0.ɵɵinject(i0.NgZone));\n};\nMapDirectionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapDirectionsService,\n  factory: MapDirectionsService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request) {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({\n            results: results || [],\n            status\n          });\n          observer.complete();\n        });\n      });\n    });\n  }\n}\nMapGeocoder.ɵfac = function MapGeocoder_Factory(t) {\n  return new (t || MapGeocoder)(i0.ɵɵinject(i0.NgZone));\n};\nMapGeocoder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MapGeocoder,\n  factory: MapGeocoder.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"names":["i0","inject","NgZone","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","MapEventManager","_clearListeners","listener","_listeners","remove","constructor","_ngZone","_pending","_targetStream","undefined","getLazyEmitter","name","pipe","target","observable","observer","push","addListener","event","run","next","complete","setTarget","currentTarget","value","forEach","subscriber","subscribe","destroy","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_center","_zoom","options","_options","_elementRef","platformId","_eventManager","height","width","mapInitialized","authFailure","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","window","google","ngDevMode","Error","_existingAuthFailureCallback","gm_authFailure","emit","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","runOutsideAngular","maps","Map","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","ɵfac","ElementRef","ɵcmp","type","args","selector","exportAs","changeDetection","OnPush","template","encapsulation","None","Object","decorators","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","ɵdir","MapBicyclingLayer","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","radius","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","circle","Circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapDirectionsRenderer","directions","_directions","_googleMap","directionsChanged","directionsRenderer","DirectionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapGroundOverlay","url","_url","_bounds","opacity","_opacity","clickable","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapInfoWindow","position","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","combinedOptionsChanges","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","shouldFocus","anchorObject","getAnchor","get","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","title","_title","label","_label","_clickable","icon","_icon","visible","_visible","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","marker","Marker","setTitle","setLabel","setClickable","setIcon","setVisible","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","_canInitialize","MarkerClusterer","markerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","batchSize","initialMarkers","_getInternalMarkers","_markers","toArray","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markers","filter","markerComponent","descendants","MapPolygon","paths","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","path","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","polyline","Polyline","setPath","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","autoRefresh","_autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","MapHeatmapLayer","_data","visualization","heatmap","HeatmapLayer","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","COMPONENTS","GoogleMapsModule","ɵmod","ɵinj","declarations","exports","MapDirectionsService","route","request","_directionsService","DirectionsService","status","ɵprov","providedIn","MapGeocoder","geocode","_geocoder","Geocoder","results"],"sources":["/Users/igortsiumrak/Desktop/FinalProject/client/node_modules/@angular/google-maps/fesm2022/google-maps.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nclass MapEventManager {\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n                // return a dummy object that returns `undefined` from `addListener` (see #26514).\n                if (!listener) {\n                    observer.complete();\n                    return undefined;\n                }\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap',\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /** Event emitted when the map is initialized. */\n        this.mapInitialized = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n         */\n        this.authFailure = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n            this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n            googleMapsWindow.gm_authFailure = () => {\n                if (this._existingAuthFailureCallback) {\n                    this._existingAuthFailureCallback();\n                }\n                this.authFailure.emit();\n            };\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n            });\n            this._eventManager.setTarget(this.googleMap);\n            this.mapInitialized.emit(this.googleMap);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n        }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n            styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center,\n            zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n        };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMap, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: GoogleMap, selector: \"google-map\", inputs: { height: \"height\", width: \"width\", mapTypeId: \"mapTypeId\", center: \"center\", zoom: \"zoom\", options: \"options\" }, outputs: { mapInitialized: \"mapInitialized\", authFailure: \"authFailure\", boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], usesOnChanges: true, ngImport: i0, template: '<div class=\"map-container\"></div><ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], mapTypeId: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], mapInitialized: [{\n                type: Output\n            }], authFailure: [{\n                type: Output\n            }], boundsChanged: [{\n                type: Output\n            }], centerChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], headingChanged: [{\n                type: Output\n            }], idle: [{\n                type: Output\n            }], maptypeidChanged: [{\n                type: Output\n            }], mapMousemove: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], projectionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], tilesloaded: [{\n                type: Output\n            }], tiltChanged: [{\n                type: Output\n            }], zoomChanged: [{\n                type: Output\n            }] } });\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapBaseLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapBaseLayer, selector: \"map-base-layer\", exportAs: [\"mapBaseLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapBaseLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.bicyclingLayer = new google.maps.BicyclingLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.bicyclingLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.bicyclingLayer) {\n            this.bicyclingLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapBicyclingLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapBicyclingLayer, selector: \"map-bicycling-layer\", exportAs: [\"mapBicyclingLayer\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapBicyclingLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.circle = new google.maps.Circle(options);\n                });\n                this._assertInitialized();\n                this.circle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.circle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.circle) {\n            this.circle.setMap(null);\n        }\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n            const combinedOptions = {\n                ...options,\n                center: center || options.center,\n                radius: radius !== undefined ? radius : options.radius,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapCircle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapCircle, selector: \"map-circle\", inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\" }, exportAs: [\"mapCircle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapCircle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], centerChanged: [{\n                type: Output\n            }], circleClick: [{\n                type: Output\n            }], circleDblclick: [{\n                type: Output\n            }], circleDrag: [{\n                type: Output\n            }], circleDragend: [{\n                type: Output\n            }], circleDragstart: [{\n                type: Output\n            }], circleMousedown: [{\n                type: Output\n            }], circleMousemove: [{\n                type: Output\n            }], circleMouseout: [{\n                type: Output\n            }], circleMouseover: [{\n                type: Output\n            }], circleMouseup: [{\n                type: Output\n            }], radiusChanged: [{\n                type: Output\n            }], circleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.directionsRenderer.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.directionsRenderer);\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.directionsRenderer) {\n            this.directionsRenderer.setMap(null);\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            directions: this._directions || options.directions,\n            map: this._googleMap.googleMap,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapDirectionsRenderer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapDirectionsRenderer, selector: \"map-directions-renderer\", inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\" }, exportAs: [\"mapDirectionsRenderer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapDirectionsRenderer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-directions-renderer',\n                    exportAs: 'mapDirectionsRenderer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { directions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], directionsChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                if (bounds) {\n                    this._ngZone.runOutsideAngular(() => {\n                        this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n                            clickable: this.clickable,\n                            opacity: this._opacity.value,\n                        });\n                    });\n                    this._assertInitialized();\n                    this.groundOverlay.setMap(this._map.googleMap);\n                    this._eventManager.setTarget(this.groundOverlay);\n                }\n            });\n            this._watchForOpacityChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.groundOverlay) {\n            this.groundOverlay.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this._assertInitialized();\n                this.groundOverlay.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            this._assertInitialized();\n            const overlay = this.groundOverlay;\n            overlay.set('url', url);\n            // Google Maps only redraws the overlay if we re-set the map.\n            overlay.setMap(null);\n            overlay.setMap(this._map.googleMap);\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapGroundOverlay, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapGroundOverlay, selector: \"map-ground-overlay\", inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\" }, exportAs: [\"mapGroundOverlay\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapGroundOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { url: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            const combinedOptionsChanges = this._combineOptions();\n            combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.infoWindow = new google.maps.InfoWindow(options);\n                });\n                this._eventManager.setTarget(this.infoWindow);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus) {\n        this._assertInitialized();\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            // The config is cast to `any`, because the internal typings are out of date.\n            this.infoWindow.open({\n                map: this._googleMap.googleMap,\n                anchor: anchorObject,\n                shouldFocus,\n            });\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = {\n                ...options,\n                position: position || options.position,\n                content: this._elementRef.nativeElement,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapInfoWindow, deps: [{ token: GoogleMap }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapInfoWindow, selector: \"map-info-window\", inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\" }, host: { styleAttribute: \"display: none\" }, exportAs: [\"mapInfoWindow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapInfoWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], closeclick: [{\n                type: Output\n            }], contentChanged: [{\n                type: Output\n            }], domready: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.kmlLayer = new google.maps.KmlLayer(options)));\n                this._assertInitialized();\n                this.kmlLayer.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.kmlLayer);\n            });\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.kmlLayer) {\n            this.kmlLayer.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = {\n                ...options,\n                url: url || options.url,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapKmlLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapKmlLayer, selector: \"map-kml-layer\", inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\" }, exportAs: [\"mapKmlLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapKmlLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], kmlClick: [{\n                type: Output\n            }], defaultviewportChanged: [{\n                type: Output\n            }], statusChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n        this._visible = value;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.marker = new google.maps.Marker(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.marker.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.marker);\n        }\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon, _visible } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n            if (changes['visible'] && _visible !== undefined) {\n                marker.setVisible(_visible);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.marker) {\n            this.marker.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return {\n            ...options,\n            title: this._title || options.title,\n            position: this._position || options.position,\n            label: this._label || options.label,\n            clickable: this._clickable ?? options.clickable,\n            map: this._googleMap.googleMap,\n            icon: this._icon || options.icon,\n            visible: this._visible ?? options.visible,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapMarker, selector: \"map-marker\", inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\", visible: \"visible\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\" }, exportAs: [\"mapMarker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], animationChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], clickableChanged: [{\n                type: Output\n            }], cursorChanged: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], draggableChanged: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], flatChanged: [{\n                type: Output\n            }], iconChanged: [{\n                type: Output\n            }], mapMousedown: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], mapMouseup: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], shapeChanged: [{\n                type: Output\n            }], titleChanged: [{\n                type: Output\n            }], visibleChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        this._canInitialize = this._googleMap._isBrowser;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            if (typeof MarkerClusterer !== 'function' &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' +\n                    'Please install the MarkerClustererPlus library: ' +\n                    'https://github.com/googlemaps/js-markerclustererplus');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n            });\n            this._assertInitialized();\n            this._eventManager.setTarget(this.markerClusterer);\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            this._watchForMarkerChanges();\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick, } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        if (this.markerClusterer) {\n            this.markerClusterer.setMap(null);\n        }\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return {\n            ...options,\n            ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n            averageCenter: this._averageCenter ?? options.averageCenter,\n            batchSize: this.batchSize ?? options.batchSize,\n            batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n            calculator: this._calculator ?? options.calculator,\n            clusterClass: this._clusterClass ?? options.clusterClass,\n            enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n            gridSize: this._gridSize ?? options.gridSize,\n            ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n            imageExtension: this._imageExtension ?? options.imageExtension,\n            imagePath: this._imagePath ?? options.imagePath,\n            imageSizes: this._imageSizes ?? options.imageSizes,\n            maxZoom: this._maxZoom ?? options.maxZoom,\n            minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n            styles: this._styles ?? options.styles,\n            title: this._title ?? options.title,\n            zIndex: this._zIndex ?? options.zIndex,\n            zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n        };\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        const initialMarkers = [];\n        for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n            this._currentMarkers.add(marker);\n            initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n        this._markers.changes\n            .pipe(takeUntil(this._destroy))\n            .subscribe((markerComponents) => {\n            this._assertInitialized();\n            const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n            const markersToAdd = [];\n            const markersToRemove = [];\n            for (const marker of Array.from(newMarkers)) {\n                if (!this._currentMarkers.has(marker)) {\n                    this._currentMarkers.add(marker);\n                    markersToAdd.push(marker);\n                }\n            }\n            for (const marker of Array.from(this._currentMarkers)) {\n                if (!newMarkers.has(marker)) {\n                    markersToRemove.push(marker);\n                }\n            }\n            this.markerClusterer.addMarkers(markersToAdd, true);\n            this.markerClusterer.removeMarkers(markersToRemove, true);\n            this.markerClusterer.repaint();\n            for (const marker of markersToRemove) {\n                this._currentMarkers.delete(marker);\n            }\n        });\n    }\n    _getInternalMarkers(markers) {\n        return markers\n            .filter(markerComponent => !!markerComponent.marker)\n            .map(markerComponent => markerComponent.marker);\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapMarkerClusterer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapMarkerClusterer, selector: \"map-marker-clusterer\", inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSize: \"batchSize\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\" }, queries: [{ propertyName: \"_markers\", predicate: MapMarker, descendants: true }], exportAs: [\"mapMarkerClusterer\"], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapMarkerClusterer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { ariaLabelFn: [{\n                type: Input\n            }], averageCenter: [{\n                type: Input\n            }], batchSize: [{\n                type: Input\n            }], batchSizeIE: [{\n                type: Input\n            }], calculator: [{\n                type: Input\n            }], clusterClass: [{\n                type: Input\n            }], enableRetinaIcons: [{\n                type: Input\n            }], gridSize: [{\n                type: Input\n            }], ignoreHidden: [{\n                type: Input\n            }], imageExtension: [{\n                type: Input\n            }], imagePath: [{\n                type: Input\n            }], imageSizes: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minimumClusterSize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], zoomOnClick: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], clusteringbegin: [{\n                type: Output\n            }], clusteringend: [{\n                type: Output\n            }], clusterClick: [{\n                type: Output\n            }], _markers: [{\n                type: ContentChildren,\n                args: [MapMarker, { descendants: true }]\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.polygon = new google.maps.Polygon(options);\n                });\n                this._assertInitialized();\n                this.polygon.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polygon);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polygon) {\n            this.polygon.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = {\n                ...options,\n                paths: paths || options.paths,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapPolygon, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapPolygon, selector: \"map-polygon\", inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\" }, exportAs: [\"mapPolygon\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapPolygon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], paths: [{\n                type: Input\n            }], polygonClick: [{\n                type: Output\n            }], polygonDblclick: [{\n                type: Output\n            }], polygonDrag: [{\n                type: Output\n            }], polygonDragend: [{\n                type: Output\n            }], polygonDragstart: [{\n                type: Output\n            }], polygonMousedown: [{\n                type: Output\n            }], polygonMousemove: [{\n                type: Output\n            }], polygonMouseout: [{\n                type: Output\n            }], polygonMouseover: [{\n                type: Output\n            }], polygonMouseup: [{\n                type: Output\n            }], polygonRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => (this.polyline = new google.maps.Polyline(options)));\n                this._assertInitialized();\n                this.polyline.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polyline);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polyline) {\n            this.polyline.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = {\n                ...options,\n                path: path || options.path,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapPolyline, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapPolyline, selector: \"map-polyline\", inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\" }, exportAs: [\"mapPolyline\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapPolyline, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], polylineClick: [{\n                type: Output\n            }], polylineDblclick: [{\n                type: Output\n            }], polylineDrag: [{\n                type: Output\n            }], polylineDragend: [{\n                type: Output\n            }], polylineDragstart: [{\n                type: Output\n            }], polylineMousedown: [{\n                type: Output\n            }], polylineMousemove: [{\n                type: Output\n            }], polylineMouseout: [{\n                type: Output\n            }], polylineMouseover: [{\n                type: Output\n            }], polylineMouseup: [{\n                type: Output\n            }], polylineRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.rectangle = new google.maps.Rectangle(options);\n                });\n                this._assertInitialized();\n                this.rectangle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.rectangle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.rectangle) {\n            this.rectangle.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = {\n                ...options,\n                bounds: bounds || options.bounds,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapRectangle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapRectangle, selector: \"map-rectangle\", inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\" }, exportAs: [\"mapRectangle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapRectangle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { options: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], boundsChanged: [{\n                type: Output\n            }], rectangleClick: [{\n                type: Output\n            }], rectangleDblclick: [{\n                type: Output\n            }], rectangleDrag: [{\n                type: Output\n            }], rectangleDragend: [{\n                type: Output\n            }], rectangleDragstart: [{\n                type: Output\n            }], rectangleMousedown: [{\n                type: Output\n            }], rectangleMousemove: [{\n                type: Output\n            }], rectangleMouseout: [{\n                type: Output\n            }], rectangleMouseover: [{\n                type: Output\n            }], rectangleMouseup: [{\n                type: Output\n            }], rectangleRightclick: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                this._ngZone.runOutsideAngular(() => {\n                    this.trafficLayer = new google.maps.TrafficLayer(options);\n                });\n                this._assertInitialized();\n                this.trafficLayer.setMap(this._map.googleMap);\n            });\n            this._watchForAutoRefreshChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.trafficLayer) {\n            this.trafficLayer.setMap(null);\n        }\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapTrafficLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapTrafficLayer, selector: \"map-traffic-layer\", inputs: { autoRefresh: \"autoRefresh\" }, exportAs: [\"mapTrafficLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapTrafficLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { autoRefresh: [{\n                type: Input\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.transitLayer = new google.maps.TransitLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.transitLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.transitLayer) {\n            this.transitLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapTransitLayer, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapTransitLayer, selector: \"map-transit-layer\", exportAs: [\"mapTransitLayer\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapTransitLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.heatmap.setMap(this._googleMap.googleMap);\n        }\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.heatmap) {\n            this.heatmap.setMap(null);\n        }\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            data: this._normalizeData(this._data || options.data || []),\n            map: this._googleMap.googleMap,\n        };\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapHeatmapLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", type: MapHeatmapLayer, selector: \"map-heatmap-layer\", inputs: { data: \"data\", options: \"options\" }, exportAs: [\"mapHeatmapLayer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapHeatmapLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-heatmap-layer',\n                    exportAs: 'mapHeatmapLayer',\n                }]\n        }], ctorParameters: function () { return [{ type: GoogleMap }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }] } });\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n    MapHeatmapLayer,\n];\nclass GoogleMapsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMapsModule, declarations: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer,\n            MapHeatmapLayer], exports: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer,\n            MapHeatmapLayer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMapsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: GoogleMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            // Initialize the `DirectionsService` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._directionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            this._directionsService.route(request, (result, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ result: result || undefined, status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapDirectionsService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapDirectionsService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapDirectionsService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            // Initialize the `Geocoder` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            this._geocoder.geocode(request, (results, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ results: results || [], status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapGeocoder, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapGeocoder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0-rc.2\", ngImport: i0, type: MapGeocoder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}