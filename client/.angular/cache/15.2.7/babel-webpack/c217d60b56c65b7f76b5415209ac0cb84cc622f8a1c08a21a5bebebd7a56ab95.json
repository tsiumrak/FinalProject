{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { of } from \"rxjs\";\nimport { Component } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class LikesService {\n  constructor() {\n    const likedPostsJson = localStorage.getItem(\"likedPosts\");\n    if (likedPostsJson) {\n      this.likedPosts = new Set(JSON.parse(likedPostsJson));\n    } else {\n      this.likedPosts = new Set();\n    }\n  }\n  isLiked(postId) {\n    return this.likedPosts.has(postId);\n  }\n  likePost(postId) {\n    this.likedPosts.add(postId);\n    localStorage.setItem(\"likedPosts\", JSON.stringify(Array.from(this.likedPosts)));\n  }\n  unlikePost(postId) {\n    this.likedPosts.delete(postId);\n    localStorage.setItem(\"likedPosts\", JSON.stringify(Array.from(this.likedPosts)));\n  }\n  getLikes() {\n    return of(this.likedPosts.size);\n  }\n}\nLikesService.ɵfac = function LikesService_Factory(t) {\n  return new (t || LikesService)();\n};\nLikesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LikesService,\n  factory: LikesService.ɵfac,\n  providedIn: \"root\"\n});\nlet HomeComponent = class HomeComponent {\n  constructor(postService, router, likesService) {\n    this.postService = postService;\n    this.router = router;\n    this.likesService = likesService;\n    this.likeCount = 0;\n    this.time = new Date().toLocaleString();\n    this.posts = [];\n  }\n  ngOnInit() {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n    this.likesService.getLikes().subscribe(likes => {\n      this.likeCount = likes;\n    });\n  }\n  postDetalis(_id) {\n    this.router.navigate([\"/content-page/detalis\", _id]);\n  }\n  onLikeClick(postId) {\n    if (this.likesService.isLiked(postId)) {\n      this.likesService.unlikePost(postId);\n      this.likeCount--;\n    } else {\n      this.likesService.likePost(postId);\n      this.likeCount++;\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AA+BA,SAAqBA,EAAE,QAAQ,MAAM;AA0CrC,SAASC,SAAS,QAAgB,eAAe;;AArCjD,OAAM,MAAOC,YAAY;EAGvBC;IACE,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACzD,IAAIF,cAAc,EAAE;MAClB,IAAI,CAACG,UAAU,GAAG,IAAIC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC,CAAC;KACtD,MAAM;MACL,IAAI,CAACG,UAAU,GAAG,IAAIC,GAAG,EAAE;;EAE/B;EAEAG,OAAO,CAACC,MAAc;IACpB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAACD,MAAM,CAAC;EACpC;EAEAE,QAAQ,CAACF,MAAc;IACrB,IAAI,CAACL,UAAU,CAACQ,GAAG,CAACH,MAAM,CAAC;IAC3BP,YAAY,CAACW,OAAO,CAClB,YAAY,EACZP,IAAI,CAACQ,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC5C;EACH;EAEAa,UAAU,CAACR,MAAc;IACvB,IAAI,CAACL,UAAU,CAACc,MAAM,CAACT,MAAM,CAAC;IAC9BP,YAAY,CAACW,OAAO,CAClB,YAAY,EACZP,IAAI,CAACQ,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC5C;EACH;EAEAe,QAAQ;IACN,OAAOtB,EAAE,CAAC,IAAI,CAACO,UAAU,CAACgB,IAAI,CAAC;EACjC;;AAlCWrB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAsB,SAAZtB,YAAY;EAAAuB,YAFX;AAAM;AAkDb,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBvB,YACUwB,WAAyB,EACzBC,MAAc,EACdC,YAA0B;IAF1B,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,iBAAY,GAAZC,YAAY;IAPtB,cAAS,GAAG,CAAC;IACb,SAAI,GAAW,IAAIC,IAAI,EAAE,CAACC,cAAc,EAAE;IAE1C,UAAK,GAAW,EAAE;EAKf;EACHC,QAAQ;IACN,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE,CAACC,SAAS,CAAEC,KAAa,IAAI;MACtD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;IACF,IAAI,CAACN,YAAY,CAACP,QAAQ,EAAE,CAACY,SAAS,CAAEE,KAAK,IAAI;MAC/C,IAAI,CAACC,SAAS,GAAGD,KAAK;IACxB,CAAC,CAAC;EACJ;EAEAE,WAAW,CAACC,GAAW;IACrB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,uBAAuB,EAAED,GAAG,CAAC,CAAC;EACtD;EAEAE,WAAW,CAAC7B,MAAc;IACxB,IAAI,IAAI,CAACiB,YAAY,CAAClB,OAAO,CAACC,MAAM,CAAC,EAAE;MACrC,IAAI,CAACiB,YAAY,CAACT,UAAU,CAACR,MAAM,CAAC;MACpC,IAAI,CAACyB,SAAS,EAAE;KACjB,MAAM;MACL,IAAI,CAACR,YAAY,CAACf,QAAQ,CAACF,MAAM,CAAC;MAClC,IAAI,CAACyB,SAAS,EAAE;;EAEpB;CACD;AAhCYX,aAAa,eALzBzB,SAAS,CAAC;EACTyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWlB,aAAa,CAgCzB;SAhCYA,aAAa","names":["of","Component","LikesService","constructor","likedPostsJson","localStorage","getItem","likedPosts","Set","JSON","parse","isLiked","postId","has","likePost","add","setItem","stringify","Array","from","unlikePost","delete","getLikes","size","factory","providedIn","HomeComponent","postService","router","likesService","Date","toLocaleString","ngOnInit","getPosts","subscribe","posts","likes","likeCount","postDetalis","_id","navigate","onLikeClick","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/components/home/home.component.ts"],"sourcesContent":["// import { Component, OnInit } from \"@angular/core\";\n// import { Router } from \"@angular/router\";\n// import { Post } from \"src/app/models/posts\";\n// import { LikesService } from \"src/app/services/LikesService.service\";\n// import { PostsService } from \"src/app/services/posts.service\";\n\n// @Component({\n//   selector: \"app-home\",\n//   templateUrl: \"./home.component.html\",\n//   styleUrls: [\"./home.component.css\"],\n// })\n// export class HomeComponent implements OnInit {\n//   likeCount = 0\n//   time: string = new Date().toLocaleString();\n\n//   posts: Post[] = [];\n//   constructor(private postService: PostsService, private router: Router, private likesService: LikesService) {}\n//   ngOnInit(): void {\n//     this.postService.getPosts().subscribe((posts: Post[]) => {\n//       this.posts = posts;\n//     });\n//     this.likesService.getLikes().subscribe(likes => {\n//       this.likeCount = likes;\n//   }\n\n//   postDetalis(_id: string): void {\n//     this.router.navigate([\"/content-page/detalis\", _id]);\n//   }\n// }\n\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LikesService {\n  private likedPosts: Set<number>;\n\n  constructor() {\n    const likedPostsJson = localStorage.getItem(\"likedPosts\");\n    if (likedPostsJson) {\n      this.likedPosts = new Set(JSON.parse(likedPostsJson));\n    } else {\n      this.likedPosts = new Set();\n    }\n  }\n\n  isLiked(postId: number): boolean {\n    return this.likedPosts.has(postId);\n  }\n\n  likePost(postId: number): void {\n    this.likedPosts.add(postId);\n    localStorage.setItem(\n      \"likedPosts\",\n      JSON.stringify(Array.from(this.likedPosts))\n    );\n  }\n\n  unlikePost(postId: number): void {\n    this.likedPosts.delete(postId);\n    localStorage.setItem(\n      \"likedPosts\",\n      JSON.stringify(Array.from(this.likedPosts))\n    );\n  }\n\n  getLikes(): Observable<number> {\n    return of(this.likedPosts.size);\n  }\n}\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Post } from \"src/app/models/posts\";\nimport { LikesService } from \"src/app/services/likes.service\";\nimport { PostsService } from \"src/app/services/posts.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  likeCount = 0;\n  time: string = new Date().toLocaleString();\n\n  posts: Post[] = [];\n  constructor(\n    private postService: PostsService,\n    private router: Router,\n    private likesService: LikesService\n  ) {}\n  ngOnInit(): void {\n    this.postService.getPosts().subscribe((posts: Post[]) => {\n      this.posts = posts;\n    });\n    this.likesService.getLikes().subscribe((likes) => {\n      this.likeCount = likes;\n    });\n  }\n\n  postDetalis(_id: string): void {\n    this.router.navigate([\"/content-page/detalis\", _id]);\n  }\n\n  onLikeClick(postId: number): void {\n    if (this.likesService.isLiked(postId)) {\n      this.likesService.unlikePost(postId);\n      this.likeCount--;\n    } else {\n      this.likesService.likePost(postId);\n      this.likeCount++;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}