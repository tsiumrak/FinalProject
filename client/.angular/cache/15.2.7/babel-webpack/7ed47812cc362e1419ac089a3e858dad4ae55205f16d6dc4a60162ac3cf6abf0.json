{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from \"@angular/core\";\n// import { BehaviorSubject } from \"rxjs\";\n// @Injectable({\n//   providedIn: \"root\",\n// })\n// export class TranslationService {\n//   public supportedLanguages = [\"en\", \"uk\", \"fr\", \"es\"];\n//   public currentLang = new BehaviorSubject<string>(\"en\");\n//   currentLang$ = this.currentLang.asObservable();\n//   public translations: any = {};\n//   currentLangSubject: any;\n//   translationService: any;\n//   constructor() {}\n//   public getSupportedLanguages(): string[] {\n//     return this.translationService.supportedLanguages;\n//   }\n//   async loadTranslations(lang: string): Promise<void> {\n//     const response = await fetch(`/assets/i18n/${lang}.json`);\n//     const translations = await response.json();\n//     return (this.translations = translations);\n//   }\n//   getCurrentLang(): string {\n//     return this.currentLang.value;\n//   }\n//   setLang(lang: string) {\n//     this.currentLang.next(lang);\n//   }\n//   translate(key: string): string {\n//     return this.translations[key] || key;\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["/Users/igortsiumrak/Desktop/FinalProject/client/src/app/services/translation.service.ts"],"sourcesContent":["// import { Injectable } from \"@angular/core\";\n// import { BehaviorSubject } from \"rxjs\";\n\n// @Injectable({\n//   providedIn: \"root\",\n// })\n// export class TranslationService {\n//   public supportedLanguages = [\"en\", \"uk\", \"fr\", \"es\"];\n\n//   public currentLang = new BehaviorSubject<string>(\"en\");\n//   currentLang$ = this.currentLang.asObservable();\n\n//   public translations: any = {};\n//   currentLangSubject: any;\n//   translationService: any;\n\n//   constructor() {}\n//   public getSupportedLanguages(): string[] {\n//     return this.translationService.supportedLanguages;\n//   }\n\n//   async loadTranslations(lang: string): Promise<void> {\n//     const response = await fetch(`/assets/i18n/${lang}.json`);\n//     const translations = await response.json();\n//     return (this.translations = translations);\n//   }\n\n//   getCurrentLang(): string {\n//     return this.currentLang.value;\n//   }\n\n//   setLang(lang: string) {\n//     this.currentLang.next(lang);\n//   }\n\n//   translate(key: string): string {\n//     return this.translations[key] || key;\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}